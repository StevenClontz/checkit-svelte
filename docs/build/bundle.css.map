{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BankComponent from './Bank.svelte';\nimport Jumbotron from './Jumbotron.svelte';\nimport Front from './Front.svelte';\nimport Nav from './Nav.svelte';\nimport { onMount } from 'svelte';\n;\nlet loading = true;\nlet bank = undefined;\nlet banks = [];\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    const res = yield fetch(`./bank.json`);\n    let _0 = yield res.json();\n    let _1 = Object.assign({}, _0);\n    let _2 = Object.assign({}, _0);\n    _1.title = \"Foobar\";\n    _1.slug = \"foo\";\n    _1.outcomes = _1.outcomes.slice(2, 7);\n    _2.title = \"Hello Baz\";\n    _2.slug = \"baz\";\n    _2.outcomes = _2.outcomes.slice(3, 8);\n    banks = [_0, _1, _2];\n    loading = false;\n}));\n</script>\n\n<Nav bind:bank={bank} {banks}/>\n\n{#if loading}\n    <div class=\"text-center\">\n        <h1 class=\"display-4\">Loading ☑️It...</h1>\n    </div>\n{:else}\n    {#if bank}\n        <BankComponent {bank}/>\n    {:else}\n        <Jumbotron bind:bank={bank} {banks}/>\n        <Front/>\n    {/if}\n{/if}\n\n<style>\n    h1 { margin-top: 1em }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAkDI,EAAE,eAAC,CAAC,AAAC,UAAU,CAAE,GAAG,CAAC,CAAC"
}